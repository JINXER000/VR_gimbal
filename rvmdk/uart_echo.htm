<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\rvmdk\uart_echo.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\rvmdk\uart_echo.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060300: Last Updated: Wed May 23 11:10:37 2018
<BR><P>
<H3>Maximum Stack Usage =        104 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
UARTIntHandler &rArr; instructionsget &rArr; passorders &rArr; gyromove
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[a]">Reset_Handler</a>
 <LI><a href="#[1]">NmiSR</a>
 <LI><a href="#[2]">FaultISR</a>
 <LI><a href="#[3]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[e]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">SysCtlDelay</a><BR>
 <LI><a href="#[1]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NmiSR</a><BR>
 <LI><a href="#[2]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">FaultISR</a><BR>
 <LI><a href="#[3]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[6]">ADC0Sequence0Isr</a> from yaogan.o(i.ADC0Sequence0Isr) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[2]">FaultISR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[3]">IntDefaultHandler</a> from startup_rvmdk.o(RESET) referenced 111 times from startup_rvmdk.o(RESET)
 <LI><a href="#[1]">NmiSR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[a]">Reset_Handler</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[4]">SysTickIntHandler</a> from buttons.o(i.SysTickIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[7]">U3Handler</a> from chuankou.o(i.U3Handler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[8]">U6Handler</a> from chuankou.o(i.U6Handler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[5]">UARTIntHandler</a> from chuankou.o(i.UARTIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[9]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[a]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[b]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[3e]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[c]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[f]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3f]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[40]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[41]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[42]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[43]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[e]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntHandler
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0Sequence0Isr
</UL>

<P><STRONG><a name="[44]"></a>CPUcpsid</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[45]"></a>CPUprimask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[19]"></a>CPUcpsie</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
</UL>

<P><STRONG><a name="[46]"></a>CPUwfi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[47]"></a>CPUbasepriSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[48]"></a>CPUbasepriGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[d]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[49]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[6]"></a>ADC0Sequence0Isr</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, yaogan.o(i.ADC0Sequence0Isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC0Sequence0Isr
</UL>
<BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceDataGet
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCProcessorTrigger
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCIntClear
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>ADCIntClear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, adc.o(i.ADCIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcinit
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0Sequence0Isr
</UL>

<P><STRONG><a name="[24]"></a>ADCIntEnable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, adc.o(i.ADCIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcinit
</UL>

<P><STRONG><a name="[12]"></a>ADCProcessorTrigger</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, adc.o(i.ADCProcessorTrigger))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcinit
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0Sequence0Isr
</UL>

<P><STRONG><a name="[21]"></a>ADCSequenceConfigure</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, adc.o(i.ADCSequenceConfigure))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADCSequenceConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcinit
</UL>

<P><STRONG><a name="[11]"></a>ADCSequenceDataGet</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, adc.o(i.ADCSequenceDataGet))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0Sequence0Isr
</UL>

<P><STRONG><a name="[23]"></a>ADCSequenceEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, adc.o(i.ADCSequenceEnable))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcinit
</UL>

<P><STRONG><a name="[22]"></a>ADCSequenceStepConfigure</STRONG> (Thumb, 154 bytes, Stack size 4 bytes, adc.o(i.ADCSequenceStepConfigure))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ADCSequenceStepConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcinit
</UL>

<P><STRONG><a name="[13]"></a>ButtonsInit</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, buttons.o(i.ButtonsInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ButtonsInit &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a]"></a>ButtonsPoll</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, buttons.o(i.ButtonsPoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ButtonsPoll
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntHandler
</UL>

<P><STRONG><a name="[1b]"></a>CopeSerial2Data</STRONG> (Thumb, 440 bytes, Stack size 12 bytes, main.o(i.CopeSerial2Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CopeSerial2Data
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U3Handler
</UL>

<P><STRONG><a name="[16]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeADC
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
</UL>

<P><STRONG><a name="[14]"></a>GPIOPadConfigSet</STRONG> (Thumb, 312 bytes, Stack size 24 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeADC
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonsInit
</UL>

<P><STRONG><a name="[37]"></a>GPIOPinConfigure</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwminit
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartinit
</UL>

<P><STRONG><a name="[15]"></a>GPIOPinTypeADC</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeADC))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPIOPinTypeADC &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcinit
</UL>

<P><STRONG><a name="[17]"></a>GPIOPinTypePWM</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypePWM))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPIOPinTypePWM &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwminit
</UL>

<P><STRONG><a name="[1e]"></a>GPIOPinWrite</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntHandler
</UL>

<P><STRONG><a name="[25]"></a>IntEnable</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, interrupt.o(i.IntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcinit
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18]"></a>IntMasterEnable</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IntMasterEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsie
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcinit
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[38]"></a>PWMClockSet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pwm.o(i.PWMClockSet))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwminit
</UL>

<P><STRONG><a name="[39]"></a>PWMGenConfigure</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, pwm.o(i.PWMGenConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwminit
</UL>

<P><STRONG><a name="[3c]"></a>PWMGenEnable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pwm.o(i.PWMGenEnable))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwminit
</UL>

<P><STRONG><a name="[3a]"></a>PWMGenPeriodSet</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, pwm.o(i.PWMGenPeriodSet))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwminit
</UL>

<P><STRONG><a name="[3b]"></a>PWMOutputState</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, pwm.o(i.PWMOutputState))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwminit
</UL>

<P><STRONG><a name="[2d]"></a>PWMPulseWidthSet</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, pwm.o(i.PWMPulseWidthSet))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwminit
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyromove
</UL>

<P><STRONG><a name="[2f]"></a>SysCtlClockFreqSet</STRONG> (Thumb, 700 bytes, Stack size 24 bytes, sysctl.o(i.SysCtlClockFreqSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysCtlClockFreqSet
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwminit
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcinit
</UL>

<P><STRONG><a name="[35]"></a>SysTickEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickEnable))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[34]"></a>SysTickIntEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4]"></a>SysTickIntHandler</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, buttons.o(i.SysTickIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SysTickIntHandler &rArr; ButtonsPoll
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonsPoll
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>SysTickPeriodSet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, systick.o(i.SysTickPeriodSet))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7]"></a>U3Handler</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, chuankou.o(i.U3Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = U3Handler &rArr; CopeSerial2Data
</UL>
<BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CopeSerial2Data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>U6Handler</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, chuankou.o(i.U6Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = U6Handler &rArr; headprocess
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;headprocess
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UARTIntHandler</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, chuankou.o(i.UARTIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = UARTIntHandler &rArr; instructionsget &rArr; passorders &rArr; gyromove
</UL>
<BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;instructionsget
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>UARTSend</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, chuankou.o(i.UARTSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTSend
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartinit
</UL>

<P><STRONG><a name="[4a]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[4b]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[4c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[1f]"></a>adcinit</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, yaogan.o(i.adcinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = adcinit &rArr; GPIOPinTypeADC &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeADC
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceStepConfigure
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceEnable
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceConfigure
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCProcessorTrigger
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCIntEnable
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCIntClear
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>controltask</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, main.o(i.controltask))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = controltask &rArr; follow &rArr; gyromove
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaogancontrol
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selfadjust
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getworkstate
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a]"></a>follow</STRONG> (Thumb, 246 bytes, Stack size 16 bytes, main.o(i.follow))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = follow &rArr; gyromove
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyromove
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controltask
</UL>

<P><STRONG><a name="[27]"></a>getworkstate</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, main.o(i.getworkstate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = getworkstate
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controltask
</UL>

<P><STRONG><a name="[2b]"></a>gyromove</STRONG> (Thumb, 248 bytes, Stack size 56 bytes, main.o(i.gyromove))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gyromove
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pidrealize
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMPulseWidthSet
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaogancontrol
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selfadjust
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;passorders
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow
</UL>

<P><STRONG><a name="[1c]"></a>headprocess</STRONG> (Thumb, 294 bytes, Stack size 12 bytes, main.o(i.headprocess))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = headprocess
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U6Handler
</UL>

<P><STRONG><a name="[36]"></a>hextodec</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(i.hextodec))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;passorders
</UL>

<P><STRONG><a name="[1d]"></a>instructionsget</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, main.o(i.instructionsget))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = instructionsget &rArr; passorders &rArr; gyromove
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;passorders
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntHandler
</UL>

<P><STRONG><a name="[9]"></a>main</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = main &rArr; controltask &rArr; follow &rArr; gyromove
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwminit
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pidinit
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adcinit
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickPeriodSet
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntEnable
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickEnable
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockFreqSet
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonsInit
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controltask
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartinit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[2e]"></a>passorders</STRONG> (Thumb, 288 bytes, Stack size 16 bytes, main.o(i.passorders))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = passorders &rArr; gyromove
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hextodec
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyromove
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;instructionsget
</UL>

<P><STRONG><a name="[32]"></a>pidinit</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, mypid.o(i.pidinit))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2c]"></a>pidrealize</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, mypid.o(i.pidrealize))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyromove
</UL>

<P><STRONG><a name="[30]"></a>pwminit</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, duoji.o(i.pwminit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pwminit &rArr; GPIOPinTypePWM &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMOutputState
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenPeriodSet
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenEnable
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMGenConfigure
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMClockSet
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypePWM
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWMPulseWidthSet
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[29]"></a>selfadjust</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, main.o(i.selfadjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = selfadjust &rArr; gyromove
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyromove
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controltask
</UL>

<P><STRONG><a name="[31]"></a>uartinit</STRONG> (Thumb, 282 bytes, Stack size 24 bytes, chuankou.o(i.uartinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uartinit &rArr; UARTSend
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinConfigure
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[28]"></a>yaogancontrol</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, main.o(i.yaogancontrol))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = yaogancontrol &rArr; gyromove
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gyromove
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controltask
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
